name: Build Merl Cinema Apps

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Web build (always works)
  build-web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: merl-cinema-web
          path: build/web/
          retention-days: 30

  # Android build (works reliably)
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Flutter pub get
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: merl-cinema-android
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  # iOS build (attempt with better error handling)
  build-ios:
    runs-on: macos-13

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Attempt iOS Build
        continue-on-error: true
        run: |
          echo "üî® Attempting Flutter iOS build..."

          # Try the simplest possible iOS build
          flutter build ios --release --no-codesign --verbose || echo "iOS build failed, but continuing..."

      - name: Check for iOS Build Output
        run: |
          if [ -d "build/ios/iphoneos/Runner.app" ]; then
            echo "‚úÖ iOS build succeeded!"
            ls -la build/ios/iphoneos/

            # Create IPA
            mkdir -p Payload
            cp -r build/ios/iphoneos/Runner.app Payload/
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            IPA_NAME="merl-cinema-ios-${TIMESTAMP}.ipa"
            zip -r "$IPA_NAME" Payload/

            mkdir -p artifacts
            mv "$IPA_NAME" artifacts/

            echo "‚úÖ iOS IPA created!"
            ls -la artifacts/
          else
            echo "‚ùå iOS build failed or incomplete"
            echo "üìù iOS builds require local macOS development"
            echo "üí° Use: flutter build ios (on Mac with Xcode)"
          fi

      - name: Upload iOS Build (if exists)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: merl-cinema-ios
          path: artifacts/*.ipa
          retention-days: 30

      - name: iOS Build Instructions
        if: failure()
        run: |
          echo "üì± iOS Build Instructions:"
          echo "1. Use macOS with Xcode installed"
          echo "2. Run: flutter build ios --release"
          echo "3. Find IPA at: build/ios/iphoneos/Runner.app"
          echo "4. Use Xcode to create signed IPA for distribution"
